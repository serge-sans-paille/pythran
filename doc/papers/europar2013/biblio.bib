@Article{	  cython2010,
  author	= {Behnel, Stefan and Bradshaw, Robert and Citro, Craig and
		  Dalcin, Lisandro and Seljebotn, Dag Sverre and Smith,
		  Kiurt},
  journal	= {Computing in Science Engineering},
  title		= {Cython: The Best of Both Worlds},
  year		= 2011,
  month		= march,
  volume	= 13,
  number	= 2,
  pages		= {31--39},
  keywords	= {Cython language;Fortran code;Python language
		  extension;numerical loops;programming language;C
		  language;numerical analysis;},
  issn		= {1521-9615}
}

@InProceedings{	  theano2010,
  author	= {Bergstra, James and Breuleux, Olivier and Bastien,
		  Fr{\'{e}}d{\'{e}}ric and Lamblin, Pascal and Pascanu,
		  Razvan and Desjardins, Guillaume and Turian, Joseph and
		  Warde-Farley, David and Bengio, Yoshua},
  month		= jun,
  title		= {Theano: a {CPU} and {GPU} Math Expression Compiler},
  booktitle	= {Proceedings of the Python for Scientific Computing
		  Conference ({SciPy})},
  year		= 2010,
  _url		= {http://www.iro.umontreal.ca/~lisa/pointeurs/theano_scipy2010.pdf}
		  
}

@InProceedings{	  pypy2009,
  author	= {Bolz, Carl Friedrich and Cuni, Antonio and Fijalkowski,
		  Maciej and Rigo, Armin},
  title		= {Tracing the meta-level: PyPy's tracing JIT compiler},
  booktitle	= {Proceedings of the 4th workshop on the Implementation,
		  Compilation, Optimization of Object-Oriented Languages and
		  Programming Systems},
  series	= {ICOOOLPS '09},
  year		= 2009,
  isbn		= {978-1-60558-541-3},
  pages		= {18--25},
  url		= {http://doi.acm.org/10.1145/1565824.1565827},
  publisher	= {{ACM}},
  address	= {New York, NY, USA}
}

@Article{	  boostpython2007,
  author	= {David Abrahams and Grosse-Kunstleve, Ralf W. },
  title		= {Building Hybrid Systems with Boost. Python},
  journal	= {C/C++ Users Journal},
  volume	= 21,
  number	= 7,
  year		= 2003,
  month		= jul,
  publisher	= {CMP Media LLC}
}

@InProceedings{	  copperhead2011,
  author	= {Catanzaro, Bryan and Garland, Michael and Keutzer, Kurt},
  title		= {Copperhead: compiling an embedded data parallel language},
  booktitle	= {Proceedings of the 16th ACM symposium on Principles and
		  practice of parallel programming},
  series	= {PPoPP '11},
  year		= 2011,
  isbn		= {978-1-4503-0119-0},
  pages		= {47--56},
  url		= {http://doi.acm.org/10.1145/1941553.1941562},
  publisher	= {{ACM}},
  address	= {New York, NY, USA},
  keywords	= {data parallelism, gpu, python}
}


@InProceedings{	  choy05,
  author	= {Ron Choy and Alan Edelman and Cleve Moler Of},
  title		= {Parallel {MATLAB}: Doing it right},
  booktitle	= {Proceedings of the {IEEE}},
  year		= 2005,
  pages		= {331--341}
}

@InProceedings{	  mals07,
  author	= {Xiaosong Ma and Jiangtian Li and Nagiza F. Samatova},
  title		= {Automatic Parallelization of Scripting Languages: Toward
		  Transparent Desktop Parallel Computing},
  booktitle	= {{IPDPS}},
  publisher	= {{IEEE}},
  year		= 2007,
  month		= mar,
  pages		= {1--6}
}

@Article{	  dongara2007,
  author	= {Luszczek, Piotr and Dongarra, Jack},
  title		= {High Performance Development for High End Computing With
		  Python Language Wrapper (PLW)},
  journal	= {International Journal of High Performance Computing
		  Applications},
  volume	= 21,
  number	= 3,
  month		= aug,
  year		= 2007,
  issn		= {1094-3420},
  pages		= {360--369},
  url		= {http://dx.doi.org/10.1177/1094342007078444},
  publisher	= {Sage Publications, Inc.},
  address	= {Thousand Oaks, CA, USA},
  keywords	= {Python compilation, high performance parallel computing,
		  rapid application development, scripting languages, static
		  typing}
}

@InBook{	  gil2012,
  title		= {Python/C API Reference Manual},
  chapter	= {Thread State and the Global Interpreter Lock},
  editor	= {van Rossum, Guido and Drake, Fred L. Jr.},
  publisher	= {Python Software Foundation},
  year		= 2012,
  month		= sep
}

@InProceedings{	  gpu2010,
  author	= {Garg, Rahul and Amaral, Jos{\'e} Nelson},
  title		= {Compiling Python to a hybrid execution environment},
  booktitle	= {Proceedings of the 3rd Workshop on General-Purpose
		  Computation on Graphics Processing Units},
  series	= {GPGPU '10},
  year		= 2010,
  isbn		= {978-1-60558-935-0},
  pages		= {19--30},
  url		= {http://doi.acm.org/10.1145/1735688.1735695},
  publisher	= {{ACM}},
  address	= {New York, NY, USA}
}

@Misc{		  isocxx11,
  key		= {ISO/IEC 14882:2011},
  publisher	= {{ISO}, Geneva, Switzerland},
  type		= {norm},
  title		= {Programming Languages -- {C++}},
  note	    = {{ISO}/{IEC} 14882:2011},
  year		= 2011
}

@Article{	  numpyarray2011,
  author	= {St{\'e}fan van der Walt and S. Chris Colbert and Ga{\"e}l
		  Varoquaux},
  title		= {The NumPy array: a structure for efficient numerical
		  computation},
  journal	= {{CoRR}},
  volume	= {abs/1102.1523},
  year		= 2011
}

@Article{	  oliphant2007,
  author	= {Oliphant, Travis E.},
  title		= {Python for Scientific Computing},
  journal	= {Computing in Science and Engineering},
  volume	= 9,
  number	= 3,
  month		= may,
  year		= 2007,
  issn		= {1521-9615},
  pages		= {10--20},
  url		= {http://dx.doi.org/10.1109/MCSE.2007.58},
  publisher	= {{IEEE} Educational Activities Department},
  address	= {Piscataway, NJ, USA}
}

@Misc{		  openmp3.1,
  title		= {OpenMP Application Program Interface},
  howpublished	= {http://www.openmp.org/mp-documents/OpenMP3.1.pdf},
  key		= {openmp},
  year		= 2011,
  month		= jul
}

@Book{		  pythoncapi,
  title		= {Python/C API Reference Manual},
  editor	= {van Rossum, Guido and Drake, Fred L. Jr.},
  publisher	= {Python Software Foundation},
  year		= 2012,
  month		= sep,
}

@InProceedings{	  rossum97,
  author	= {Guido van Rossum},
  title		= {A Tour of the Python Language},
  booktitle	= {TOOLS (23)},
  year		= 1997,
  pages		= 370
}

@InProceedings{	  rpython2007,
  author	= {Ancona, D. and Ancona, M. and Cuni, A and Matsakis, N.},
  title		= {R{P}ython: a {S}tep {T}owards {R}econciling {D}ynamically
		  and {S}tatically {T}yped {OO} {L}anguages},
  booktitle	= {O{OPSLA} 2007 {P}roceedings and {C}ompanion, {DLS}'07:
		  {P}roceedings of the 2007 {S}ymposium on {D}ynamic
		  {L}anguages},
  pages		= {53--64},
  publisher	= {{ACM}},
  abstract	= {Although the C-based interpreter of Python is reasonably
		  fast, implementations on the CLI or the JVM platforms
		  offers some advantages in terms of robustness and
		  interoperability. Unfortunately, because the CLI and JVM
		  are primarily designed to execute statically typed,
		  object-oriented languages, most dynamic language
		  implementations cannot use the native bytecodes for common
		  operations like method calls and exception handling; as a
		  result, they are not able to take full advantage of the
		  power offered by the CLI and JVM. We describe a different
		  approach that attempts to preserve the flexibility of
		  Python, while still allowing for efficient execution. This
		  is achieved by limiting the use of the more dynamic
		  features of Python to an initial, bootstrapping phase. This
		  phase is used to construct a final RPython (Restricted
		  Python) program that is actually executed. RPython is a
		  proper subset of Python, is statically typed, and does not
		  allow dynamic modification of class or method definitions;
		  however, it can still take advantage of Python features
		  such as mixins and first-class methods and classes. This
		  paper presents an overview of RPython, including its design
		  and its translation to both CLI and JVM bytecode. We show
		  how the bootstrapping phase can be used to implement
		  advanced features, like extensible classes and generative
		  programming. We also discuss what work remains before
		  RPython is truly ready for general use, and compare the
		  performance of RPython with that of other approaches.},
  ftp		= {ftp://ftp.disi.unige.it/pub/person/AnconaD/DLS08.pdf},
  keywords	= {objects,dynamicLang},
  year		= 2007
}

@Misc{		  scipy,
  author	= {Eric Jones and Travis Oliphant and Pearu Peterson and
		  others},
  title		= {{SciPy}: Open source scientific tools for {Python}},
  year		= {2001--},
  howpublished	= {http://www.scipy.org/}
}

@MastersThesis{	  shedskin2006,
  author	= { Dufour, Mark },
  title		= {Shed skin: An optimizing python-to-c++ compiler},
  school	= {Delft University of Technology},
  year		= 2006
}

@Article{	  swig2003,
  author	= {Beazley, David M.},
  title		= {Automated scientific software scripting with SWIG},
  journal	= {Future Generation Computer Systems},
  volume	= 19,
  number	= 5,
  month		= jul,
  year		= 2003,
  issn		= {0167-739X},
  pages		= {599--609},
  url		= {http://dx.doi.org/10.1016/S0167-739X(02)00171-1},
  publisher	= {Elsevier Science Publishers B. V.},
  address	= {Amsterdam, The Netherlands, The Netherlands},
  keywords	= {SWIG, interface compiler, python, scientific software,
		  scripting languages}
}



@Article{	  milner78,
  author	= {Robin Milner},
  title		= {A theory of type polymorphism in programming},
  journal	= {Journal of Computer and System Sciences},
  year		= 1978,
  volume	= 17,
  pages		= {348--375}
}

@article{Levanoni2006,
 author = {Levanoni, Yossi and Petrank, Erez},
 title = {An on-the-fly reference-counting garbage collector for java},
 journal = {{ACM} Transactions on Programming Languages and Systems},
 volume = 28,
 number = 1,
 month = jan,
 year = 2006,
 issn = {0164-0925},
 pages = {1--69},
 publisher = {{ACM}},
 address = {New York, NY, USA},
 keywords = {Programming languages, garbage collection, memory management, reference-counting},
} 

@article{klockner2012,
    author    = {Andreas Kl{\"o}ckner and
        Nicolas Pinto and
            Yunsup Lee and
            Bryan C. Catanzaro and
            Paul Ivanov and
            Ahmed Fasih},
    title     = {PyCUDA and PyOpenCL: A scripting-based approach to GPU run-time
        code generation},
    journal   = {Parallel Computing},
    volume    = 38,
    number    = 3,
    year      = 2012,
    pages     = {157--174},
}
