@Article{cython2010,
  author =       "Stefan Behnel and Robert Bradshaw and Craig Citro and
                 Lisandro Dalcin and Dag Sverre Seljebotn and Kiurt
                 Smith",
  journal =      "Computing in Science Engineering",
  title =        "Cython: The Best of Both Worlds",
  year =         "2011",
  month =        mar,
  volume =       "13",
  number =       "2",
  pages =        "31--39",
  keywords =     "Cython language;Fortran code;Python language
                 extension;numerical loops;programming language;C
                 language;numerical analysis;",
  ISSN =         "1521-9615",
}

@InProceedings{theano2010,
  author =       "James Bergstra and Olivier Breuleux and
                 Fr{\'{e}}d{\'{e}}ric Bastien and Pascal Lamblin and
                 Razvan Pascanu and Guillaume Desjardins and Joseph
                 Turian and David Warde-Farley and Yoshua Bengio",
  month =        jun,
  title =        "Theano: a {CPU} and {GPU} Math Expression Compiler",
  booktitle =    "Proceedings of the Python for Scientific Computing
                 Conference ({SciPy})",
  year =         "2010",
}

@InProceedings{pypy2009,
  author =       "Carl Friedrich Bolz and Antonio Cuni and Maciej
                 Fijalkowski and Armin Rigo",
  title =        "Tracing the meta-level: PyPy's tracing {JIT}
                 compiler",
  booktitle =    "Proceedings of the 4th workshop on the Implementation,
                 Compilation, Optimization of Object-Oriented Languages
                 and Programming Systems",
  series =       "ICOOOLPS '09",
  year =         "2009",
  ISBN =         "978-1-60558-541-3",
  pages =        "18--25",
  URL =          "http://doi.acm.org/10.1145/1565824.1565827",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
}

@Article{boostpython2007,
  author =       "David Abrahams and Ralf W. Grosse-Kunstleve",
  title =        "Building Hybrid Systems with Boost. Python",
  journal =      "C/C++ Users Journal",
  volume =       "21",
  number =       "7",
  year =         "2003",
  month =        jul,
  publisher =    "CMP Media LLC",
}

@InProceedings{copperhead2011,
  author =       "Bryan Catanzaro and Michael Garland and Kurt Keutzer",
  title =        "Copperhead: compiling an embedded data parallel
                 language",
  booktitle =    "Proceedings of the 16th ACM symposium on Principles
                 and practice of parallel programming",
  series =       "PPoPP '11",
  year =         "2011",
  ISBN =         "978-1-4503-0119-0",
  pages =        "47--56",
  URL =          "http://doi.acm.org/10.1145/1941553.1941562",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
  keywords =     "data parallelism, gpu, python",
}

@InProceedings{choy05,
  author =       "Ron Choy and Alan Edelman and Cleve Moler Of",
  title =        "Parallel {MATLAB}: Doing it right",
  booktitle =    "Proceedings of the {IEEE}",
  year =         "2005",
  pages =        "331--341",
}

@InProceedings{mals07,
  author =       "Xiaosong Ma and Jiangtian Li and Nagiza F. Samatova",
  title =        "Automatic Parallelization of Scripting Languages:
                 Toward Transparent Desktop Parallel Computing",
  booktitle =    "{IPDPS}",
  publisher =    "{IEEE}",
  year =         "2007",
  month =        mar,
  pages =        "1--6",
}

@Article{dongara2007,
  author =       "Piotr Luszczek and Jack Dongarra",
  title =        "High Performance Development for High End Computing
                 With Python Language Wrapper ({PLW})",
  journal =      "International Journal of High Performance Computing
                 Applications",
  volume =       "21",
  number =       "3",
  month =        aug,
  year =         "2007",
  ISSN =         "1094-3420",
  pages =        "360--369",
  URL =          "http://dx.doi.org/10.1177/1094342007078444",
  publisher =    "Sage Publications, Inc.",
  address =      "Thousand Oaks, CA, USA",
  keywords =     "Python compilation, high performance parallel
                 computing, rapid application development, scripting
                 languages, static typing",
}

@InBook{gil2012,
  title =        "Python/{C} {API} Reference Manual",
  chapter =      "Thread State and the Global Interpreter Lock",
  editor =       "Guido van Rossum and Fred L. Jr. Drake",
  publisher =    "Python Software Foundation",
  year =         "2012",
  month =        sep,
}

@InProceedings{gpu2010,
  author =       "Rahul Garg and Jos{\'e} Nelson Amaral",
  title =        "Compiling Python to a hybrid execution environment",
  booktitle =    "Proceedings of the 3rd Workshop on General-Purpose
                 Computation on Graphics Processing Units",
  series =       "GPGPU '10",
  year =         "2010",
  ISBN =         "978-1-60558-935-0",
  pages =        "19--30",
  URL =          "http://doi.acm.org/10.1145/1735688.1735695",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
}

@Misc{isocxx11,
  key =          "ISO/IEC 14882:2011",
  publisher =    "{ISO}, Geneva, Switzerland",
  type =         "norm",
  title =        "Programming Languages -- {C++}",
  note =         "{ISO}/{IEC} 14882:2011",
  year =         "2011",
}

@Article{numpyarray2011,
  author =       "St{\'e}fan van der Walt and S. Chris Colbert and
                 Ga{\"e}l Varoquaux",
  title =        "The NumPy array: a structure for efficient numerical
                 computation",
  journal =      "{CoRR}",
  volume =       "abs/1102.1523",
  year =         "2011",
}

@Article{oliphant2007,
  author =       "Travis E. Oliphant",
  title =        "Python for Scientific Computing",
  journal =      "Computing in Science and Engineering",
  volume =       "9",
  number =       "3",
  month =        may,
  year =         "2007",
  ISSN =         "1521-9615",
  pages =        "10--20",
  URL =          "http://dx.doi.org/10.1109/MCSE.2007.58",
  publisher =    "{IEEE} Educational Activities Department",
  address =      "Piscataway, NJ, USA",
}

@Misc{openmp3.1,
  title =        "Open{MP} Application Program Interface",
  howpublished = "http://www.openmp.org/mp-documents/OpenMP3.1.pdf",
  key =          "openmp",
  year =         "2011",
  month =        jul,
}

@Book{pythoncapi,
  title =        "Python/{C} {API} Reference Manual",
  editor =       "Guido van Rossum and Fred L. Jr. Drake",
  publisher =    "Python Software Foundation",
  year =         "2012",
  month =        sep,
}

@InProceedings{rossum97,
  author =       "Guido van Rossum",
  title =        "A Tour of the Python Language",
  booktitle =    "TOOLS (23)",
  year =         "1997",
  pages =        "370",
}

@InProceedings{rpython2007,
  author =       "D. Ancona and M. Ancona and A Cuni and N. Matsakis",
  title =        "{R}{P}ython: a {S}tep {T}owards {R}econciling
                 {D}ynamically and {S}tatically {T}yped {OO}
                 {L}anguages",
  booktitle =    "O{OPSLA} 2007 {P}roceedings and {C}ompanion, {DLS}'07:
                 {P}roceedings of the 2007 {S}ymposium on {D}ynamic
                 {L}anguages",
  pages =        "53--64",
  publisher =    "{ACM}",
  abstract =     "Although the C-based interpreter of Python is
                 reasonably fast, implementations on the CLI or the JVM
                 platforms offers some advantages in terms of robustness
                 and interoperability. Unfortunately, because the CLI
                 and JVM are primarily designed to execute statically
                 typed, object-oriented languages, most dynamic language
                 implementations cannot use the native bytecodes for
                 common operations like method calls and exception
                 handling; as a result, they are not able to take full
                 advantage of the power offered by the CLI and JVM. We
                 describe a different approach that attempts to preserve
                 the flexibility of Python, while still allowing for
                 efficient execution. This is achieved by limiting the
                 use of the more dynamic features of Python to an
                 initial, bootstrapping phase. This phase is used to
                 construct a final RPython (Restricted Python) program
                 that is actually executed. RPython is a proper subset
                 of Python, is statically typed, and does not allow
                 dynamic modification of class or method definitions;
                 however, it can still take advantage of Python features
                 such as mixins and first-class methods and classes.
                 This paper presents an overview of RPython, including
                 its design and its translation to both CLI and JVM
                 bytecode. We show how the bootstrapping phase can be
                 used to implement advanced features, like extensible
                 classes and generative programming. We also discuss
                 what work remains before RPython is truly ready for
                 general use, and compare the performance of RPython
                 with that of other approaches.",
  keywords =     "objects,dynamicLang",
  year =         "2007",
}

@Misc{scipy,
  author =       "Eric Jones and Travis Oliphant and Pearu Peterson and
                 others",
  title =        "{SciPy}: Open source scientific tools for {Python}",
  year =         "2001",
  howpublished = "http://www.scipy.org/",
}

@MastersThesis{shedskin2006,
  author =       "Mark Dufour",
  title =        "Shed skin: An optimizing python-to-c++ compiler",
  school =       "Delft University of Technology",
  year =         "2006",
}

@Article{swig2003,
  author =       "David M. Beazley",
  title =        "Automated scientific software scripting with {SWIG}",
  journal =      "Future Generation Computer Systems",
  volume =       "19",
  number =       "5",
  month =        jul,
  year =         "2003",
  ISSN =         "0167-739X",
  pages =        "599--609",
  URL =          "http://dx.doi.org/10.1016/S0167-739X(02)00171-1",
  publisher =    "Elsevier Science Publishers B. V.",
  address =      "Amsterdam, The Netherlands, The Netherlands",
  keywords =     "SWIG, interface compiler, python, scientific software,
                 scripting languages",
}

@Article{milner78,
  author =       "Robin Milner",
  title =        "A theory of type polymorphism in programming",
  journal =      "Journal of Computer and System Sciences",
  year =         "1978",
  volume =       "17",
  pages =        "348--375",
}

@Article{Levanoni2006,
  author =       "Yossi Levanoni and Erez Petrank",
  title =        "An on-the-fly reference-counting garbage collector for
                 java",
  journal =      "{ACM} Transactions on Programming Languages and
                 Systems",
  volume =       "28",
  number =       "1",
  month =        jan,
  year =         "2006",
  ISSN =         "0164-0925",
  pages =        "1--69",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
  keywords =     "Programming languages, garbage collection, memory
                 management, reference-counting",
}

@Article{klockner2012,
  author =       "Andreas Kl{\"o}ckner and Nicolas Pinto and Yunsup Lee
                 and Bryan C. Catanzaro and Paul Ivanov and Ahmed
                 Fasih",
  title =        "Py{CUDA} and {P}y{O}pen{CL}: {A} scripting-based
                 approach to {GPU} run-time code generation",
  journal =      "Parallel Computing",
  volume =       "38",
  number =       "3",
  year =         "2012",
  pages =        "157--174",
}

@Article{Tabba2010,
  author =       "Fuad Tabba",
  title =        "Adding concurrency in python using a commercial
                 processor's hardware transactional memory support",
  journal =      "SIGARCH Computer Architecture News",
  volume =       "38",
  number =       "5",
  month =        apr,
  year =         "2010",
  pages =        "12--19",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
}

@InProceedings{Riley2006,
  author =       "Nicholas Riley and Craig Zilles",
  title =        "Hardware tansactional memory support for lightweight
                 dynamic language evolution",
  booktitle =    "Companion to the 21st ACM SIGPLAN symposium on
                 Object-oriented programming systems, languages, and
                 applications",
  series =       "{OOPSLA} '06",
  year =         "2006",
  pages =        "998--1008",
  publisher =    "{ACM}",
  address =      "New York, NY, USA",
}

@InProceedings{wang2012,
  author =       "Cheng Wang and Sunita Chandrasekaran and Barbara M.
                 Chapman",
  title =        "An Open{MP} 3.1 Validation Testsuite",
  booktitle =    "8th International Workshop on OpenMP ({IWOMP})",
  publisher =    "Springer",
  series =       "Lecture Notes in Computer Science",
  volume =       "7312",
  year =         "2012",
  month =        jun,
  address =      "Rome, Italy",
  pages =        "237--249",
  editor =       "Barbara M. Chapman and Federico Massaioli and Matthias
                 S. M{\"u}ller and Marco Rorro",
}
